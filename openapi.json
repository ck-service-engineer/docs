{
  "openapi": "3.0.0",
  "paths": {
    "/rest/v1/assistants": {
      "post": {
        "operationId": "AssistantsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAssistantDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create AI Assistant.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assistant"
                }
              }
            }
          }
        },
        "tags": [
          "Assistants"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "AssistantsController_findAll",
        "parameters": [
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 20,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of AI Assistant.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PageDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Assistant"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Assistants"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/rest/v1/assistants/templates": {
      "get": {
        "operationId": "AssistantsController_findAllTemplates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of AI Assistant templates.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Assistant"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Assistants"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/rest/v1/assistants/{id}": {
      "get": {
        "operationId": "AssistantsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AI Assistant by Assistant ID.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assistant"
                }
              }
            }
          },
          "400": {
            "description": "Assistant not found."
          }
        },
        "tags": [
          "Assistants"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "AssistantsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssistantDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update specific AI Assistant.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assistant"
                }
              }
            }
          },
          "400": {
            "description": ""
          }
        },
        "tags": [
          "Assistants"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "AssistantsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete specific AI Assistant.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAssistant"
                }
              }
            }
          }
        },
        "tags": [
          "Assistants"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/rest/v1/assistants/duplicate/{id}": {
      "post": {
        "operationId": "AssistantsController_duplicate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update specific AI Assistant.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assistant"
                }
              }
            }
          }
        },
        "tags": [
          "Assistants"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/rest/v1/assistants/callConfig": {
      "post": {
        "operationId": "AssistantsController_callConfig",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCallConfiguration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create call configuration of AI Assistant.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallConfiguration"
                }
              }
            }
          },
          "400": {
            "description": "Assistant not found or invalid organization ID."
          }
        },
        "tags": [
          "Assistants"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/rest/v1/assistants/phoneCallConfig": {
      "post": {
        "operationId": "AssistantsController_phoneCallConfig",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhoneCallConfiguration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create phone call configuration of AI Assistant.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneCallConfiguration"
                }
              }
            }
          },
          "400": {
            "description": "Assistant not found or invalid organization ID."
          }
        },
        "tags": [
          "Assistants"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/rest/v1/assistants/themeConfig": {
      "post": {
        "operationId": "AssistantsController_themeConfig",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThemeConfigurationBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Get theme of AI Assistant.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThemeConfiguration"
                }
              }
            }
          },
          "400": {
            "description": "Assistant not found or invalid organization ID."
          }
        },
        "tags": [
          "Assistants"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/rest/v1/assistants/{assistantId}/voice": {
      "patch": {
        "operationId": "VoiceController_create",
        "parameters": [
          {
            "name": "assistantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoiceConfigurationUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update voice configuration of AI Assistant.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceConfiguration"
                }
              }
            }
          }
        },
        "tags": [
          "Assistants Voice Configuration"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "VoiceController_config",
        "parameters": [
          {
            "name": "assistantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get voice configuration of AI Assistant.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceConfiguration"
                }
              }
            }
          }
        },
        "tags": [
          "Assistants Voice Configuration"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/rest/v1/assistants/{assistantId}/sms": {
      "patch": {
        "operationId": "SmsController_create",
        "parameters": [
          {
            "name": "assistantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SmsConfigurationUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update sms configuration of AI Assistant.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmsConfiguration"
                }
              }
            }
          }
        },
        "tags": [
          "Assistants Sms Configuration"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "SmsController_config",
        "parameters": [
          {
            "name": "assistantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get sms configuration of AI Assistant.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmsConfiguration"
                }
              }
            }
          }
        },
        "tags": [
          "Assistants Sms Configuration"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/rest/v1/assistants/{assistantId}/chat": {
      "patch": {
        "operationId": "ChatController_create",
        "parameters": [
          {
            "name": "assistantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatConfigurationUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update chat configuration of AI Assistant.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatConfiguration"
                }
              }
            }
          }
        },
        "tags": [
          "Assistants Chat Configuration"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "ChatController_config",
        "parameters": [
          {
            "name": "assistantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get chat configuration of AI Assistant.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatConfiguration"
                }
              }
            }
          }
        },
        "tags": [
          "Assistants Chat Configuration"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/rest/v1/assistants/{assistantId}/theme": {
      "patch": {
        "operationId": "ThemeController_create",
        "parameters": [
          {
            "name": "assistantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThemeConfigurationUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update theme configuration of AI Assistant.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThemeConfiguration"
                }
              }
            }
          }
        },
        "tags": [
          "Assistants Theme Configuration"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "ThemeController_config",
        "parameters": [
          {
            "name": "assistantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get theme configuration of AI Assistant.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThemeConfiguration"
                }
              }
            }
          }
        },
        "tags": [
          "Assistants Theme Configuration"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Career Karma API",
    "description": "Career Karma API documentation.",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [{
    "url": "https://api.careerkarma.ai"
  }],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "CreateAssistantDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "Assistant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "template": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "PageMetaDto": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number"
          },
          "take": {
            "type": "number"
          },
          "itemCount": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        },
        "required": [
          "page",
          "take",
          "itemCount",
          "pageCount",
          "hasPreviousPage",
          "hasNextPage"
        ]
      },
      "PageDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "array"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PageMetaDto"
          }
        },
        "required": [
          "data",
          "meta"
        ]
      },
      "UpdateAssistantDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "DeleteAssistant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "CreateCallConfiguration": {
        "type": "object",
        "properties": {
          "assistantId": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "anonymousId": {
            "type": "string"
          }
        },
        "required": [
          "assistantId",
          "organizationId"
        ]
      },
      "CallConfiguration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "webCallUrl": {
            "type": "string",
            "format": "uri"
          },
          "error": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "webCallUrl",
          "error"
        ]
      },
      "CreatePhoneCallConfiguration": {
        "type": "object",
        "properties": {
          "assistantId": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "anonymousId": {
            "type": "string"
          }
        },
        "required": [
          "assistantId",
          "organizationId",
          "phoneNumber"
        ]
      },
      "PhoneCallConfiguration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "error"
        ]
      },
      "ThemeConfigurationBody": {
        "type": "object",
        "properties": {
          "assistantId": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          }
        },
        "required": [
          "assistantId",
          "organizationId"
        ]
      },
      "ThemeConfiguration": {
        "type": "object",
        "properties": {
          "theme": {
            "type": "object"
          }
        },
        "required": [
          "theme"
        ]
      },
      "Provider": {
        "type": "string",
        "enum": [
          "OPENAI",
          "GROQ",
          "ANTHROPIC"
        ]
      },
      "Model": {
        "type": "string",
        "enum": [
          "GPT_4_O",
          "GPT_3_5_TURBO",
          "GPT_4_TURBO",
          "LLAMA_3_70B",
          "LLAMA_3_8B",
          "MIXTRAL",
          "CLAUDE_3_OPUS",
          "CLAUDE_3_SONNET",
          "CLAUDE_3_HAIKU",
          "CLAUDE_3_5_SONNET"
        ]
      },
      "VoiceProvider": {
        "type": "string",
        "enum": [
          "ELEVENLABS",
          "PLAYHT",
          "OPENAI"
        ]
      },
      "BackgroundSound": {
        "type": "string",
        "enum": [
          "DEFAULT",
          "OFF",
          "OFFICE"
        ]
      },
      "VoiceConfigurationUpdateDto": {
        "type": "object",
        "properties": {
          "initialMessage": {
            "type": "string"
          },
          "prompt": {
            "type": "string"
          },
          "resources": {
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/Provider"
          },
          "model": {
            "$ref": "#/components/schemas/Model"
          },
          "voiceProvider": {
            "$ref": "#/components/schemas/VoiceProvider"
          },
          "voice": {
            "$ref": "#/components/schemas/Voice"
          },
          "temperature": {
            "type": "number"
          },
          "maxTokensOutput": {
            "type": "number"
          },
          "backgroundSound": {
            "$ref": "#/components/schemas/BackgroundSound"
          },
          "backchanneling": {
            "type": "boolean"
          }
        }
      },
      "Voice": {
        "type": "string"
      },
      "VoiceConfiguration": {
        "type": "object",
        "properties": {
          "initialMessage": {
            "type": "string"
          },
          "prompt": {
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/Provider"
          },
          "resources": {
            "type": "string"
          },
          "model": {
            "$ref": "#/components/schemas/Model"
          },
          "voiceProvider": {
            "$ref": "#/components/schemas/VoiceProvider"
          },
          "voice": {
            "type": "string",
            "enum": [
              "burt",
              "marissa",
              "andrea",
              "sarah",
              "phillip",
              "steve",
              "joseph",
              "myra",
              "paula",
              "ryan",
              "drew",
              "paul",
              "mrb",
              "matilda",
              "mark",
              "alloy",
              "echo",
              "fable",
              "onyx",
              "nova",
              "shimmer ",
              "jennifer",
              "melissa",
              "will",
              "chris",
              "matt",
              "jack",
              "ruby",
              "davis",
              "donna",
              "michael "
            ]
          },
          "temperature": {
            "type": "number"
          },
          "maxTokensOutput": {
            "type": "number"
          },
          "backgroundSound": {
            "$ref": "#/components/schemas/BackgroundSound"
          },
          "backchanneling": {
            "type": "boolean"
          }
        },
        "required": [
          "initialMessage",
          "prompt",
          "provider",
          "resources",
          "model",
          "voiceProvider",
          "voice",
          "temperature",
          "maxTokensOutput",
          "backgroundSound",
          "backchanneling"
        ]
      },
      "SmsProvider": {
        "type": "string",
        "enum": [
          "OPENAI",
          "GROQ"
        ]
      },
      "SmsModel": {
        "type": "string",
        "enum": [
          "GPT_4_O",
          "GPT_3_5_TURBO",
          "GPT_4_TURBO",
          "LLAMA_3_70B",
          "LLAMA_3_8B",
          "MIXTRAL"
        ]
      },
      "SmsConfigurationUpdateDto": {
        "type": "object",
        "properties": {
          "initialMessage": {
            "type": "string"
          },
          "prompt": {
            "type": "string"
          },
          "resources": {
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/SmsProvider"
          },
          "model": {
            "$ref": "#/components/schemas/SmsModel"
          },
          "temperature": {
            "type": "number"
          },
          "maxTokensOutput": {
            "type": "number"
          },
          "smsMode": {
            "type": "boolean"
          },
          "voiceCallMode": {
            "type": "boolean"
          },
          "keywords": {
            "type": "string"
          }
        }
      },
      "SmsConfiguration": {
        "type": "object",
        "properties": {
          "initialMessage": {
            "type": "string"
          },
          "prompt": {
            "type": "string"
          },
          "resources": {
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/SmsProvider"
          },
          "model": {
            "$ref": "#/components/schemas/SmsModel"
          },
          "temperature": {
            "type": "number"
          },
          "maxTokensOutput": {
            "type": "number"
          },
          "smsMode": {
            "type": "boolean"
          },
          "voiceCallMode": {
            "type": "boolean"
          },
          "keywords": {
            "type": "string"
          }
        },
        "required": [
          "initialMessage",
          "prompt",
          "resources",
          "provider",
          "model",
          "temperature",
          "maxTokensOutput",
          "smsMode",
          "voiceCallMode",
          "keywords"
        ]
      },
      "ChatProvider": {
        "type": "string",
        "enum": [
          "OPENAI",
          "GROQ"
        ]
      },
      "ChatModel": {
        "type": "string",
        "enum": [
          "GPT_4_O",
          "GPT_3_5_TURBO",
          "GPT_4_TURBO",
          "LLAMA_3_70B",
          "LLAMA_3_8B",
          "MIXTRAL"
        ]
      },
      "ChatConfigurationUpdateDto": {
        "type": "object",
        "properties": {
          "initialMessage": {
            "type": "string"
          },
          "prompt": {
            "type": "string"
          },
          "resources": {
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/ChatProvider"
          },
          "model": {
            "$ref": "#/components/schemas/ChatModel"
          },
          "temperature": {
            "type": "number"
          },
          "maxTokensOutput": {
            "type": "number"
          },
          "chatMode": {
            "type": "boolean"
          },
          "quickRepliesEnabled": {
            "type": "boolean"
          }
        }
      },
      "ChatConfiguration": {
        "type": "object",
        "properties": {
          "initialMessage": {
            "type": "string"
          },
          "prompt": {
            "type": "string"
          },
          "resources": {
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/ChatProvider"
          },
          "model": {
            "$ref": "#/components/schemas/ChatModel"
          },
          "temperature": {
            "type": "number"
          },
          "maxTokensOutput": {
            "type": "number"
          },
          "chatMode": {
            "type": "boolean"
          },
          "quickRepliesEnabled": {
            "type": "boolean"
          }
        },
        "required": [
          "initialMessage",
          "prompt",
          "resources",
          "provider",
          "model",
          "temperature",
          "maxTokensOutput",
          "chatMode",
          "quickRepliesEnabled"
        ]
      },
      "ThemeConfigurationUpdateDto": {
        "type": "object",
        "properties": {
          "theme": {
            "type": "object"
          }
        }
      }
    }
  }
}
